@*
    Copyright 2002-2011 Corey Trager
    Copyright 2017-2019 Ivan Grek

    Distributed under the terms of the GNU General Public License
*@

@model BugTracker.Web.Models.Attachment.CreateModel

@{
    var page = (BugTracker.Web.Models.PageModel)ViewBag.Page;

    ViewBag.Title = page.Title;
}

@section Scripts {
    <script>
        function set_msg(s) {
            document.getElementById("msg").innerHTML = s;
            //document.getElementById("file_input").innerHTML =
            //    '<input type=file class=txt name="attached_file" id="attached_file" maxlength=255 size=60>';
        }

        function waiting() {
            document.getElementById("msg").innerHTML = "Uploading...";
            return true;
        }
    </script>
}

@section BodyHeader {
}

<div class="main">
    <iframe name="hiddenframe" style="display: none">x</iframe>

    <div class="align">
        Add attachment to @Model.BugId
        <p>
            <table border="0">
                <tr>
                    <td>
                        @using (Html.BeginForm("Create", "Attachment", FormMethod.Post, new { @class = "frm", target = "hiddenframe", enctype = "multipart/form-data", onsubmit = "return waiting()" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Partial("_ValidationSummary")

                            @Html.HiddenFor(x => x.BugId)

                            <table border="0">
                                <tr>
                                    <td class="lbl">Description:</td>
                                    <td>
                                        @Html.TextBoxFor(x => x.Description, new { @class = "txt", id = "desc", maxlength = "80", size = "80" })
                                    </td>
                                </tr>

                                <tr>
                                    <td>&nbsp;</td>
                                    <td class="err">
                                        @Html.ValidationMessageFor(x => x.Description)
                                    </td>
                                </tr>

                                <tr>
                                    <td class="lbl">File:</td>
                                    <td>
                                        <div id="file_input">
                                            @Html.TextBoxFor(x => x.File, new { @class = "txt", type = "file", id = "attached_file", maxlength = "255", size = "60" })
                                        </div>
                                    </td>
                                </tr>

                                <tr>
                                    <td>&nbsp;</td>
                                    <td class="err">
                                        @Html.ValidationMessage("File")
                                    </td>
                                </tr>

                                @if (ViewBag.ShowInternalOnly)
                                {
                                    <tr>
                                        <td colspan="2">
                                            <label>@Html.CheckBoxFor(x => x.InternalOnly, new { @class = "cb", id = "internal_only" })Visible to internal users only</label>
                                        </td>
                                    </tr>
                                }

                                <tr>
                                    <td colspan="2" align="center">
                                        <input runat="server" class="btn" type="submit" id="sub" value="Upload" />
                                    </td>
                                </tr>
                            </table>
                        }
                    </td>
                </tr>
            </table>
        </p>
    </div>
</div>

@section BodyFooter {
}
