@*
    Copyright 2002-2011 Corey Trager
    Copyright 2017-2019 Ivan Grek

    Distributed under the terms of the GNU General Public License
*@

@model BugTracker.Web.Models.Comment.UpdateModel

@{
    var page = (BugTracker.Web.Models.PageModel)ViewBag.Page;

    ViewBag.Title = page.Title;
}

@section Styles {
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" type="text/css">
}

@section Scripts {
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"
            integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU="
            crossorigin="anonymous"></script>
    <script type="text/javascript" src="~/Scripts/jquery/jquery.textarearesizer.compressed.js"></script>

    @if (ViewBag.UseFckeditor)
    {
        <script src="https://cdn.ckeditor.com/4.14.1/standard/ckeditor.js"></script>
    }

    <script>
        $(document).ready(do_doc_ready);

        function do_doc_ready() {
            @if (ViewBag.UseFckeditor)
            {
                @:CKEDITOR.replace('@Html.IdFor(x => x.Comment)');
            }
            else
            {
                @:$('textarea.resizable:not(.processed)').TextAreaResizer();
            }
        }
    </script>
}

@section BodyHeader {
    @Html.Partial("~/Areas/Administration/Views/Shared/_MainMenu.cshtml", page)
}

<div class="row">
    <div class="col-lg-6">
        <div class="card bg-light">
            <div class="card-body">
                @using (Html.BeginForm("Update", "Comment", FormMethod.Post, new { @class = "frm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Partial("_ValidationSummary")

                    @Html.HiddenFor(x => x.Id)
                    @Html.HiddenFor(x => x.BugId)

                    <div class="form-group">
                        @Html.LabelFor(x => x.Comment):
                        @Html.TextAreaFor(x => x.Comment, new { @class = "form-control resizable", id = "comment", rows = "16", cols = "80" })
                        @Html.ValidationMessageFor(x => x.Comment, null, new { @class = "text-danger" }, "small")
                    </div>

                    if (ViewBag.ShowInternalOnly)
                    {
                        <div class="form-group form-check">
                            @Html.CheckBoxFor(x => x.InternalOnly, new { @class = "form-check-input" })
                            @Html.LabelFor(x => x.InternalOnly, new { @class = "form-check-label" })
                            @Html.ValidationMessageFor(x => x.InternalOnly, null, new { @class = "text-danger" }, "small")
                        </div>
                    }

                    <button type="submit" class="btn btn-success">Update</button>
                    <a href="@Url.Action("Update", "Bug", new { id = @Model.BugId})" class="btn btn-link">Cancel</a>
                }
            </div>
        </div>
    </div>
</div>

@section BodyFooter {
    @Html.Raw(BugTracker.Web.Core.Util.CustomFooterHtml)
}
