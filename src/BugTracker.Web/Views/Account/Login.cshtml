@using BugTracker.Web.Core
@model BugTracker.Web.Models.Account.LoginModel
@inject IApplicationSettings ApplicationSettings
@inject ICustomizer Customizer

@{
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-12 col-sm-8 offset-sm-2 col-md-6 offset-md-3 col-lg-6 offset-lg-3 col-xl-4 offset-xl-4">
            @Html.Raw(Customizer.LoginLogoHtml)

            <div class="card shadow-sm">
                <div class="card-body">
                    @using (Html.BeginForm("Login", "Account", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        @await Html.PartialAsync("_ValidationSummary")

                        <div class="form-group">
                            @Html.LabelFor(x => x.Login)
                            @Html.TextBoxFor(x => x.Login, new { @class = "form-control", maxlength = "20", size = "20" })
                            @Html.ValidationMessageFor(x => x.Login, null, new { @class = "text-danger" }, "small")
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(x => x.Password)

                            @if (ApplicationSettings.ShowForgotPasswordLink)
                            {
                                <div class="float-right">
                                    <small>
                                        <a href="@Url.Action("Forgot", "Account")">Forgot password?</a>
                                    </small>
                                </div>
                            }

                            @Html.PasswordFor(x => x.Password, new { autocomplete = "off", @class = "form-control", maxlength = "20", size = "20" })
                            @Html.ValidationMessageFor(x => x.Password, null, new { @class = "text-danger" }, "small")
                        </div>

                        <div class="form-group form-check">
                            @Html.CheckBoxFor(x => x.RememberMe, new { @class = "form-check-input" })
                            @Html.LabelFor(x => x.RememberMe, new { @class = "form-check-label" })
                            @Html.ValidationMessageFor(x => x.RememberMe, null, new { @class = "text-danger" }, "small")
                        </div>

                        <button type="submit" class="btn btn-primary btn-lg btn-block">Sign in</button>

                        @if (ApplicationSettings.AllowGuestWithoutLogin)
                        {
                            <div class="mt-2 text-center">
                                @Html.Hidden("AsGuest", false, new { id = "as-guest" })

                                <button type="submit" class="btn btn-link" onclick="javascript: document.getElementById('as-guest').value = true;">Continue as "guest"</button>
                            </div>
                        }
                    }
                </div>
            </div>

            @if (ApplicationSettings.AllowSelfRegistration)
            {
                <div class="mt-5 text-muted text-center">
                    Don't have an account? <a href="@Url.Action("Register", "Account")">Sign up.</a>
                </div>
            }
        </div>
    </div>

    <ul class="nav justify-content-center my-5">
        <li class="nav-item">
            <a class="nav-link text-secondary" href=" http://ifdefined.com/bugtrackernet.html">BugTracker.NET</a>
        </li>

        <li class="nav-item">
            <a class="nav-link text-secondary" href="http://ifdefined.com/README.html">Help</a>
        </li>

        <li class="nav-item">
            <a class="nav-link text-secondary" href="~/html/about.html">About</a>
        </li>

        <li class="nav-item">
            <a class="nav-link text-secondary" href="mailto:ctrager@yahoo.com">Feedback</a>
        </li>

        <li class="nav-item">
            <a class="nav-link text-secondary" href="http://ifdefined.com/README.html">Donate</a>
        </li>
    </ul>
</div>