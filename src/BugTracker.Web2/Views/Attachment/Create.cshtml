@*
    Copyright 2002-2011 Corey Trager
    Copyright 2017-2019 Ivan Grek

    Distributed under the terms of the GNU General Public License
*@

@model BugTracker.Web.Models.Attachment.CreateModel

@{
    var page = (BugTracker.Web.Models.PageModel)ViewBag.Page;

    ViewBag.Title = page.Title;
}

@section Scripts {
    <script>
        function set_msg(s) {
            document.getElementById("msg").innerHTML = s;
        }

        function waiting() {
            document.getElementById("msg").innerHTML = "Uploading...";
            return true;
        }

        $(function () {
            $('#@Html.IdFor(x => x.File)').on('change', function (e) {
                var fileName = e.target.files[0].name;

                $(this).next('.custom-file-label').html(fileName);
            });
        });
    </script>
}

@section BodyHeader {
}

<div class="row">
    <div class="col-lg-6">
        <div class="card bg-light">
            <div class="card-body">
                <iframe name="hiddenframe" style="display: none">x</iframe>
                @using (Html.BeginForm("Create", "Attachment", FormMethod.Post, new { @class = "frm", target = "hiddenframe", enctype = "multipart/form-data", onsubmit = "return waiting()" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Partial("_ValidationSummary")

                    @Html.HiddenFor(x => x.BugId)

                    <div class="form-control-plaintext">
                        Add attachment to @Model.BugId
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Description):
                        @Html.TextBoxFor(x => x.Description, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Description, null, new { @class = "text-danger" }, "small")
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.File):

                        <div class="custom-file">
                            @Html.TextBoxFor(x => x.File, new { @class = "custom-file-input", type = "file" })
                            @Html.LabelFor(x => x.File, "Choose file...", new { @class = "custom-file-label" })
                        </div>

                        @Html.ValidationMessageFor(x => x.File, null, new { @class = "text-danger" }, "small")
                    </div>

                    if (ViewBag.ShowInternalOnly)
                    {
                        <div class="form-group form-check">
                            @Html.CheckBoxFor(x => x.InternalOnly, new { @class = "form-check-input" })
                            @Html.LabelFor(x => x.InternalOnly, new { @class = "form-check-label" })
                            @Html.ValidationMessageFor(x => x.InternalOnly, null, new { @class = "text-danger" }, "small")
                        </div>
                    }

                    <button type="submit" class="btn btn-success">Upload</button>

                    <div id="msg" class="form-control-plaintext text-danger"></div>
                }
            </div>
        </div>
    </div>
</div>

@section BodyFooter {
}
