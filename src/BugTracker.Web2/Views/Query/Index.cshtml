@*
    Copyright 2002-2011 Corey Trager
    Copyright 2017-2019 Ivan Grek

    Distributed under the terms of the GNU General Public License
*@

@using System.Data
@model DataTable

@{
    var page = (BugTracker.Web.Models.PageModel)ViewBag.Page;

    ViewBag.Title = page.Title;
}

@section Styles {
}

@section Scripts {
}

@section BodyHeader {
    @Html.Partial("~/Areas/Administration/Views/Shared/_MainMenu.cshtml", page)
}

@section BodySubHeader {
    <div class="nav-scroller bg-light border-bottom">
        <nav class="nav nav-underline">
            <a href="@Url.Action("Create", "Query")" class="nav-link"><img src="~/Content/images/add.png" align="top">&nbsp;New</a>
        </nav>
    </div>
}

@if (page.Security.User.IsAdmin || page.Security.User.CanEditSql)
{
    <div class="row px-3 mb-3">
        @{
            var formId = Guid.NewGuid().ToString();
            var code = "document.getElementById('" + formId + "').submit();";
        }

        @using (Html.BeginForm("Index", "Query", FormMethod.Get, new { id = formId, @class = "form-inline ml-auto" }))
        {
            <div class="form-check mb-2 mr-sm-2">
                @Html.CheckBox("ShowAll", (bool)ViewBag.ShowAll, new { @class = "form-check-input", onchange = code })
                @Html.Label("ShowAll", "show everybody's private queries:", new { @class = "form-check-label" })
            </div>
        }
    </div>
}
else
{
}

@(Html
    .Grid("MvcGrid/_GridBootstrap4", Model.Rows.Cast<DataRow>())
    .Build(columns =>
    {
        columns.Add(model => model["query"] as string)
            .Named("query")
            .Titled("query")
            .Sortable(true);

        columns.Add(model => model["visibility"] as string)
            .Named("visibility")
            .Titled("visibility")
            .Sortable(true);

        columns.Add(model => model["$no_sort_view list"] as string)
            .Named("view list")
            .Titled("view list")
            .Encoded(false);

        columns.Add(model => model["$no_sort_print list"] as string)
            .Named("print list")
            .Titled("print list")
            .Encoded(false);

        columns.Add(model => model["$no_sort_export as excel"] as string)
             .Named("export as excel")
             .Titled("export as excel")
             .Encoded(false);

        columns.Add(model => model["$no_sort_print list<br>with detail"] as string)
             .Named("print list with detail")
             .Titled("print list with detail")
             .Encoded(false);

        columns.Add(model => model["$no_sort_rename"] as string)
             .Named("rename")
             .Titled("rename")
             .Encoded(false);

        columns.Add(model => model["$no_sort_delete"] as string)
             .Named("delete")
             .Titled("delete")
             .Encoded(false);

        columns.Add(model => model["$no_sort_sql"] as string)
             .Named("sql")
             .Titled("sql")
             .Encoded(false);
    })
    .Empty("No queries in the database.")
    //.UsingProcessingMode(GridProcessingMode.Manual)
    .Sortable()
//.Pageable()
)

@section BodyFooter {
    @Html.Raw(BugTracker.Web.Core.Util.CustomFooterHtml)
}
