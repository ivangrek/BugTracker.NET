@*
    Copyright 2002-2011 Corey Trager
    Copyright 2017-2019 Ivan Grek

    Distributed under the terms of the GNU General Public License
*@

@model BugTracker.Web.Models.Bug.MergeModel

@{
    var page = (BugTracker.Web.Models.PageModel)ViewBag.Page;

    ViewBag.Title = page.Title;
}

@section Styles {
}

@section Scripts {
}

@section BodyHeader {
    @Html.Partial("~/Areas/Administration/Views/Shared/_MainMenu.cshtml", page)
}

<div class="row">
    <div class="col-lg-6">
        <div class="card bg-light">
            <div class="card-body">
                @using (Html.BeginForm("Merge", "Bug", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.Partial("_ValidationSummary")

                    @Html.HiddenFor(x => x.Id)
                    @Html.HiddenFor(x => x.Confirm)

                    if (Model.Confirm)
                    {
                        @Html.HiddenFor(x => x.FromBugId)
                        <div class="form-control-plaintext">@Html.ValidationMessage("StaticFromBug")</div>
                        <div class="form-control-plaintext">@Html.ValidationMessage("StaticFromBugDescription")</div>
                    }
                    else
                    {
                        <div class="form-group">
                            @Html.LabelFor(x => x.FromBugId):
                            @Html.TextBoxFor(x => x.FromBugId, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.FromBugId, null, new { @class = "text-danger" }, "small")
                        </div>
                    }

                    if (Model.Confirm)
                    {
                        @Html.HiddenFor(x => x.IntoBugId)
                        <div class="form-control-plaintext">@Html.ValidationMessage("StaticIntoBug")</div>
                        <div class="form-control-plaintext">@Html.ValidationMessage("StaticIntoBugDescription")</div>
                    }
                    else
                    {
                        <div class="form-group">
                            @Html.LabelFor(x => x.IntoBugId):
                            @Html.TextBoxFor(x => x.IntoBugId, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.IntoBugId, null, new { @class = "text-danger" }, "small")
                        </div>
                    }

                    <div class="form-control-plaintext text-info">
                        Merge all comments, attachments, and subscriptions
                        <br>
                        from "FROM" @page.ApplicationSettings.SingularBugLabel
                        <br>
                        into "INTO" @page.ApplicationSettings.SingularBugLabel.
                    </div>

                    <div class="form-control-plaintext text-danger">
                        Note: "FROM" @page.ApplicationSettings.SingularBugLabel
                        <br>
                        will be deleted!
                    </div>

                    <button type="submit" class="btn btn-success">@(Model.Confirm ? "Confirm Merge" : "Merge" )</button>
                    <a href="@Url.Action("Update", "Bug", new { id = Model.Id})" class="btn btn-link">Cancel</a>
                }
            </div>
        </div>
    </div>
</div>

@section BodyFooter {
    @Html.Raw(BugTracker.Web.Core.Util.CustomFooterHtml)
}
